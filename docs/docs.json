{"meta":{"generator":"0.10.0","format":20,"date":1630604271010},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\r\n\t<img src=\"https://github.com/ayanobot/rankcard/raw/main/RankCard.png\"><br>\r\n\t<sub>An example using the default settings provided by the library!</sub>\r\n\t<h1>@ayanobot/rankcard</h1>\r\n\t<code>npm i @ayanobot/rankcard</code> \r\n</div>\r\n<br>\r\n\r\nAyano's own Rank Card generator! (:\r\n\r\nView the documentation [here](https://ayano.newtt.me/#/docs/rankcard/main/general/welcome)\r\n\r\nThe default font is currently Neutra Text Bold - [Discord.js](https://discord.js.org) design font.\r\n\r\n### To-do\r\n\r\n- [ ] Eris Support\r\n- [ ] More helper methods\r\n- [ ] More customisation\r\n","path":"readme.md"}}}},"classes":[{"name":"RankCard","description":"A rank card, as used by Ayano!","access":"public","construct":{"name":"RankCard","description":"Creates a new Rank Card!","params":[{"name":"input","description":"The data for the rank card to initialise with","type":[[["InputData"]]]}]},"props":[{"name":"_data","description":"Rank card data","access":"private","type":[[["CardData"]]],"meta":{"line":195,"file":"index.js","path":"lib"}}],"methods":[{"name":"_calculateProgress","description":"Calculates the progress the progress bar should be at","access":"private","returns":[[["number"]]],"meta":{"line":274,"file":"index.js","path":"lib"}},{"name":"setBackground","description":"Sets the background of the rank card!","params":[{"name":"type","description":"The type of the input","type":[[["BackgroundType"]]]},{"name":"value","description":"The inputted value","type":[[["string"]],[["Buffer"]]]}],"returns":[[["RankCard"]]],"meta":{"line":293,"file":"index.js","path":"lib"}},{"name":"setOverlay","description":"Sets the overlay of the rank card!","params":[{"name":"colour","description":"The colour to make the overlay","type":[[["string"]]]},{"name":"level","description":"The level to make the overlay","optional":true,"default":0.5,"type":[[["number"]]]},{"name":"display","description":"Whether the overlay should be displayed anymore","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["RankCard"]]],"meta":{"line":306,"file":"index.js","path":"lib"}},{"name":"setProgressBar","description":"Updates data about the progress bar's style!","params":[{"name":"type","description":"The type of the input","type":[[["ProgressType"]]]},{"name":"value","description":"The inputted value","type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"rounded","description":"Whether the progress bar should be rounded or not","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["RankCard"]]],"meta":{"line":320,"file":"index.js","path":"lib"}},{"name":"setProgressBarTrack","description":"Update the progress bar's track colour!","params":[{"name":"colour","description":"The colour to make the progress bar track!","type":[[["string"]]]}],"returns":[[["RankCard"]]],"meta":{"line":332,"file":"index.js","path":"lib"}},{"name":"build","description":"Builds the rank card!","params":[{"name":"fonts","description":"The fonts to build the card with","optional":true,"default":"{bold: 'Neutra', regular: 'Neutra'}","type":[[["BuildFonts"]]]}],"async":true,"returns":[[["Promise","<"],["Buffer",">"]]],"meta":{"line":343,"file":"index.js","path":"lib"}}],"meta":{"line":24,"file":"index.js","path":"lib"}}],"interfaces":[],"typedefs":[{"name":"BuildFonts","description":"Fonts provided when building to customise rank cards.","type":[[["Object"]]],"props":[{"name":"bold","description":"The font to use for bold text","type":[[["string"]]]},{"name":"regular","description":"The font to use for regular text","type":[[["string"]]]}],"meta":{"line":25,"file":"index.js","path":"lib"}},{"name":"Font","description":"A font to register with Canvas for usage during building.","type":[[["Object"]]],"props":[{"name":"path","description":"The path to the font file","type":[[["string"]]]},{"name":"family","description":"The name of the font family to register it under","type":[[["string"]]]},{"name":"weight","description":"The weight of the font","optional":true,"type":[[["string"]]]},{"name":"style","description":"The style of the font","optional":true,"type":[[["string"]]]}],"meta":{"line":32,"file":"index.js","path":"lib"}},{"name":"InputData","description":"Input to generate the Rank Card with.","type":[[["Object"]]],"props":[{"name":"level","description":"The level of the user the rank card is being generated for","type":[[["number"]]]},{"name":"xpForLevel","description":"A function that calculates the amount of XP per level","type":[[["XPForLevel"]]]},{"name":"user","description":"The user to generate the rank card for","type":[[["GuildMember"]]]},{"name":"rank","description":"The rank of the user","optional":true,"type":[[["number"]]]},{"name":"fonts","description":"The fonts to register for usage during building","optional":true,"type":[[["Array","<"],["Font",">"]]]},{"name":"usernameLength","description":"The length to shorten the username to","optional":true,"type":[[["number"]]]},{"name":"stripAccents","description":"Whether accents should be stripped from the username or not","optional":true,"type":[[["boolean"]]]}],"meta":{"line":41,"file":"index.js","path":"lib"}},{"name":"PartialPiece","description":"Internal type to represent part of a full piece of data.","type":[[["Object"]]],"props":[{"name":"data","description":"The piece of data","type":[[["T"]]]},{"name":"colour","description":"The colour to render the data with","type":[[["string"]]]},{"name":"size","description":"The font size in pixels to render the data at","type":[[["number"]]]}],"meta":{"line":53,"file":"index.js","path":"lib"}},{"name":"Piece","description":"Internal type to represent a piece of data.","type":[[["PartialPiece","<"],["T",">"]]],"props":[{"name":"display","description":"Whether the data should be displayed or not","type":[[["boolean"]]]},{"name":"displayText","description":"What to describe the data as on display","type":[[["string"]]]}],"meta":{"line":62,"file":"index.js","path":"lib"}},{"name":"BackgroundType","description":"Supported background input types. This can be:\r* 'image'\r* 'colour'","type":[[["string"]]],"meta":{"line":70,"file":"index.js","path":"lib"}},{"name":"Background","description":"Background data.","type":[[["Object"]]],"props":[{"name":"type","description":"The type of the input. Can be one of 'image' or 'colour'","type":[[["BackgroundType"]]]},{"name":"value","description":"The inputted value. If 'image', Buffer. If 'colour', string.","type":[[["string"]],[["Buffer"]]]}],"meta":{"line":77,"file":"index.js","path":"lib"}},{"name":"ProgressType","description":"Supported progress bar colour input types. This can be:\r* 'gradient'\r* 'colour'","type":[[["string"]]],"meta":{"line":84,"file":"index.js","path":"lib"}},{"name":"ProgressBar","description":"Progress bar data.","type":[[["Object"]]],"props":[{"name":"rounded","description":"Whether or not the progress bar is rounded","type":[[["boolean"]]]},{"name":"trackColour","description":"The colour of the bar's track","type":[[["string"]]]},{"name":"barColour","type":[[["Object"]]]},{"name":"barColour.type","description":"The type of the input. Can be one of 'colour' or 'gradient'.","type":[[["ProgressType"]]]},{"name":"barColour.value","description":"The value of the input. If 'colour', string. If 'gradient', string[].","type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"x","description":"The x coordinate","type":[[["number"]]]},{"name":"y","description":"The y coordinate","type":[[["number"]]]},{"name":"height","description":"The height in pixels","type":[[["number"]]]},{"name":"width","description":"The width in pixels","type":[[["number"]]]}],"meta":{"line":91,"file":"index.js","path":"lib"}},{"name":"Avatar","description":"Avatar data.","type":[[["Object"]]],"props":[{"name":"source","description":"The source of the avatar","type":[[["string"]],[["Buffer"]]]},{"name":"x","description":"The x coordinate","type":[[["number"]]]},{"name":"y","description":"The y coordinate","type":[[["number"]]]},{"name":"height","description":"The height in pixels","type":[[["number"]]]},{"name":"width","description":"The width in pixels","type":[[["number"]]]}],"meta":{"line":105,"file":"index.js","path":"lib"}},{"name":"Status","description":"Status data.","type":[[["Object"]]],"props":[{"name":"width","description":"The width of the object","type":[[["number"]]]},{"name":"type","description":"The status of the user","type":[[["PresenceStatus"]]]},{"name":"colour","description":"The colour of the status","type":[[["string"]]]},{"name":"circle","description":"Whether the status should display in a small circle rather than a ring","type":[[["boolean"]]]}],"meta":{"line":115,"file":"index.js","path":"lib"}},{"name":"Overlay","description":"Overlay data.","type":[[["Object"]]],"props":[{"name":"display","description":"Whether the overlay should be displayed","type":[[["boolean"]]]},{"name":"alpha","description":"The alpha value of the overlay","type":[[["number"]]]},{"name":"colour","description":"The colour of the overlay","type":[[["string"]]]}],"meta":{"line":124,"file":"index.js","path":"lib"}},{"name":"CardData","description":"Internal data used by the builder to render cards.","type":[[["Object"]]],"props":[{"name":"width","description":"The width of the card","type":[[["number"]]]},{"name":"height","description":"The height of the card","type":[[["number"]]]},{"name":"background","description":"Data about the background of the card","type":[[["Background"]]]},{"name":"progressBar","description":"Data about the progress bar","type":[[["ProgressBar"]]]},{"name":"avatar","description":"Data about the avatar","type":[[["Avatar"]]]},{"name":"status","description":"Data about the status","type":[[["Status"]]]},{"name":"overlay","description":"Data about the overlay","type":[[["Overlay"]]]},{"name":"rank","description":"Data about the user's rank","type":[[["Piece","<"],["number",">"]]]},{"name":"level","description":"Data about the user's level","type":[[["Piece","<"],["number",">"]]]},{"name":"currentXP","description":"Data about the user's current XP","type":[[["PartialPiece","<"],["number",">"]]]},{"name":"requiredXP","description":"Data about the user's required XP","type":[[["PartialPiece","<"],["number",">"]]]},{"name":"username","description":"Data about the user's username","type":[[["PartialPiece","<"],["string",">"]]]},{"name":"discriminator","description":"Data about the user's discriminator","type":[[["PartialPiece","<"],["string",">"]]]}],"meta":{"line":132,"file":"index.js","path":"lib"}},{"name":"XPForLevel","description":"Calculates the amount of XP for a level.","type":[[["function"]]],"params":[{"name":"level","description":"The level to calculate the amount of XP for","type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"The amount of XP required for the provided level"},"meta":{"line":150,"file":"index.js","path":"lib"}}],"externals":[]}