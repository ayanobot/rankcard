{"meta":{"generator":"0.9.0","format":20,"date":1634755077276},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\r\n\t<img src=\"https://github.com/ayanobot/rankcard/raw/main/example.png\"><br>\r\n\t<sub>An example using the default settings provided by the library!</sub>\r\n\t<h1>@ayanobot/rankcard</h1>\r\n\t<code>npm i @ayanobot/rankcard</code> \r\n</div>\r\n<br>\r\n\r\nAyano's own Rank Card generator! (:\r\n\r\nView the documentation [here](https://ayano.newtt.me/#/docs/rankcard/main/general/welcome)\r\n\r\nThe default font is currently Neutra Text Bold - [Discord.js](https://discord.js.org) design font.\r\n\r\n<sub>View the license <a href=\"license.md\">here</a>.</sub>\r\n","path":"readme.md"}}}},"classes":[{"name":"CardGenerator","description":"The rank card generator.","access":"public","construct":{"name":"CardGenerator","description":"Initialises a new rank card generator!","params":[{"name":"config","type":[[["GeneratorConfig"]]]}]},"props":[{"name":"statusColours","type":[[["StatusColours"]]],"meta":{"line":152,"file":"index.ts","path":"src"}}],"methods":[{"name":"generateCard","description":"Renders a rank card with the given data","params":[{"name":"data","description":"Data to populate the card with","type":[[["CardData"]]]},{"name":"font","description":"The font to use while rendering the card","optional":true,"default":"'Neutra'","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["MessageAttachment",">"]]],"meta":{"line":132,"file":"index.ts","path":"src"}},{"name":"addFont","description":"Register a font for usage with rank cards!","params":[{"name":"font","description":"The font data","type":[[["Font"]]]}],"meta":{"line":161,"file":"index.ts","path":"src"}}],"meta":{"line":83,"file":"index.ts","path":"src"}},{"name":"RankCard","description":"A rank card, as used by Ayano!","access":"public","construct":{"name":"RankCard","description":"Creates a new Rank Card!","params":[{"name":"config","description":"The data for the rank card to initialise with","type":[[["CardConfig"]]]}]},"methods":[{"name":"calculateProgress","description":"Calculates the progress the progress bar should be at","access":"private","returns":[[["number"]]],"meta":{"line":299,"file":"RankCard.ts","path":"src"}},{"name":"render","description":"Renders the rank card!","params":[{"name":"font","description":"The font to render the card with","type":[[["string"]]]}],"async":true,"returns":[[["Promise","<"],["Buffer",">"]]],"meta":{"line":308,"file":"RankCard.ts","path":"src"}}],"meta":{"line":196,"file":"RankCard.ts","path":"src"}}],"interfaces":[],"typedefs":[{"name":"Piece","description":"Internal type to represent a piece of","type":[[["Object"]]],"props":[{"name":"value","description":"The piece of data","type":[[["T"]]]},{"name":"fontColour","description":"The colour to render the data with","type":[[["string"]]]},{"name":"fontSize","description":"The font size in pixels to render the data at","type":[[["number"]]]},{"name":"display","description":"Whether the piece should be displayed or not","type":[[["boolean"]]]}],"meta":{"line":12,"file":"RankCard.ts","path":"src"}}],"externals":[]}